#BlueJ class context
comment0.target=RunTest
comment0.text=\n\ This\ is\ the\ primary\ evaluation\ module\ for\ COMP\ 1409\ Assignment\ Two\n\ under\ Jason\ Harrison\ /\ James\ McCartney.\n\ \n\ The\ student\ will\ observe\ that\ this\ module\ operates\ quite\ differently\n\ from\ the\ one\ demonstrated\ in\ Assignment\ One.\ \ Your\ task\ will\ be\ to\n\ have\ RunTest\ respond\ with\ the\ message\ "Done\!\ Total\ Issues\ Found\:\ 0".\n\ There\ are\ a\ large\ amount\ of\ alternative\ outcomes,\ which\ are\n\ difficult\ to\ troubleshoot\ --\ yet\ you\ will\ still\ be\ obligated\ to\ fix.\n\ \n\ If\ you\ see\:\n\ \ \ \ \ \ Line\ mismatch.\ Found\:\ <a\ number>.\ Expected\:\ <different\ number>\n\ \n\ ...\ then\ your\ solution\ has\ diverged\ so\ greatly\ from\ expectations\n\ that\ the\ tool\ is\ not\ able\ to\ begin\ to\ say\ how.\ \ Usually,\ this\ will\n\ be\ because\ your\ classes\ have\ less,\ or\ more,\ System.out.println()\n\ statements\ than\ expected.\ \ Go\ into\ your\ mutators,\ and\ ensure\n\ that\ they\ do\ not\ have\ println()s\ at\ all.\ \ It\ is\ expected,\n\ in\ this\ assignment,\ that\ if\ any\ validation\ fails,\ it\ "fails\ silently";\n\ that\ is,\ no\ changes\ result,\ and\ there\ is\ no\ output\ message.\n\ \n\ If\ you\ see\:\n\ \ \ \ \ \ no\ suitable\ constructor\ found\ for\ ClassName(<arguments>)\n\ \ \ \ \ \ constructor\ ClassName.ClassName()\ is\ not\ applicable;\n\ \ \ \ \ \ (actual\ and\ formal\ argument\ lists\ differ\ in\ length)\n\ \ \ \ \ \ \n\ ...\ then\ one\ of\ your\ classes'\ constructors\ needs\ to\ be\ changed,\n\ or\ possibly\ added.\ \ TestAssignment\ expects\ that\ the\ constructors\n\ will\ have\ specific\ parameter\ types\ in\ a\ specific\ order,\n\ specified\ in\ the\ assignment\ requirements\ document.\n\ \n\ If\ you\ see\:\n\ \ \ \ \ \ Expected\:\ <a\ String\ or\ number>\n\ \ \ \ \ \ Found\:\ <different\ String\ or\ number>\n\ \n\ ...\ these\ are\ typical\ "bugs",\ or\ flaws\ in\ your\ program.\n\ Since\ the\ test\ module\ only\ tells\ you\ what\ output\ it\ expected\n\ to\ see,\ versus\ what\ it\ actually\ saw,\ you\ may\ be\ missing\ some\n\ context,\ and\ be\ uncertain\ as\ to\ where\ the\ problem\ occurred.\n\ Do\ not\ be\ discouraged.\n\ Yes,\ the\ test\ module\ could\ and\ should\ have\ been\ written\n\ to\ give\ you\ more\ information,\ but\ you'll\ struggle\ with\n\ incomplete\ reporting\ tools\ throughout\ your\ career.\n\ Use\ the\ clues\ provided\ in\ pages\ 15\ through\ 27\ (Expected\ Output)\n\ of\ the\ assignment\ document\ to\ narrow\ down\ what\ class\ is\ malfunctioning.\n\ \n\ For\ example,\ the\ number\ "71"\ is\ the\ expected\ result\n\ of\ Author.getAgeYearsOfDirector()\ for\ the\ imaginary\ person\n\ born\ on\ December\ 18,\ 1946.\ \ Because\ the\ age\ answer\ is\ dependent\n\ on\ a\ 2017\ reference\ point,\ and\ not\ the\ author's\ age\ at\ death,\n\ you\ might\ get\ the\ numbers\ 70\ or\ 66\ instead.\n\ Visit\ Author.getAgeYearsOfDirector()\ and\ make\ whatever\ change\ is\ needed\n\ to\ produce\ the\ 71\ answer.\ \ [Note\:\ We\ always\ program\ according\n\ to\ design,\ regardless\ of\ whatever\ other\ information\ we\ have.\n\ In\ this\ case,\ design\ says\ the\ current\ year\ is\ 2017.\n\ If\ the\ design\ is\ mistaken,\ then\ design\ can\ be\ reviewed\ and\ corrected\n\ by\ management\ --\ but\ programmers\ should\ learn\ to\ follow\ instructions.]\n
comment1.params=
comment1.target=RunTest()
comment1.text=\n\ RunTest\ has\ a\ private\ constructor\!\!\n\ This\ is\ because\ it\ matches\ a\ variety\ of\ "Singleton"\ programming\ pattern.\n\ We\ only\ intend\ for\ an\ object\ of\ this\ type\ to\ be\ created\ by\ the\ main()\n\ method.\ \ Run\ main(),\ leaving\ the\ parameter\ as\ {}\ -\ just\ as\ it\ is,\n\ to\ perform\ the\ Assignment\ Two\ Evaluation\ Test.\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\n\ Use\ this\ method\ to\ evaluate\ your\ project.\n\ You\ can\ do\ so\ by\ right-clicking\ the\ green\ RunTest\ class\ and\ selecting\n\ "main()"\ from\ the\ pop-up\ menu.\n\ @param\ args\ \ \ \ \ \ standard\ entry-point\ input\ for\ a\ Java\ program;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ these\ particular\ args\ are\ ignored,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ since\ the\ module\ has\ all\ the\ info\ it\ needs\ already,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ but\ the\ parameter\ {}\ is\ still\ necessary\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ this\ method\ to\ fit\ the\ shape\ of\ an\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "executable"\ class\n
numComments=3
