#BlueJ class context
comment0.target=ProvinceTerritory
comment1.params=newName\ newPopulation
comment1.target=ProvinceTerritory(java.lang.String,\ int)
comment1.text=\n\ [ProvinceTerritory]\n\ @param\ \ String\ newName\ \ \ \ \ \ \ -\ sets\ name\ if\ not\ null\n\ @param\ \ int\ \ \ \ newPopulation\ -\ sets\ population\ if\ greater\ than\ zero\n
comment10.params=name
comment10.target=boolean\ isProvinceInCanda(java.lang.String)
comment10.text=\n\ [isProvinceInCanada]\n\ @param\ \ String\ name\ \ \ \ \ \ \ \ \ \ -\ name\ of\ province\n\ @return\ \ result\ -\ returns\ true\ if\ province\ provide\ is\ within\ Canada\n
comment11.params=substring
comment11.target=java.lang.String[]\ getProvincesWhoseNameContains(java.lang.String)
comment11.text=\n\ [getProvincesWhoseNameContains]\n\ @param\ \ String\ substring\ \ \ \ \ -\ substring\ value\n\ @return\ provincesFound\ -\ all\ provinces\ containing\ substring\ value\n
comment12.params=substring
comment12.target=ProvinceTerritory[]\ getMoreProvincesWhoseNameContains(java.lang.String)
comment12.text=\n\ [getProvincesWhoseNameContains]\n\ @param\ \ String\ substring\ \ \ \ \ -\ substring\ value\n\ @return\ provincesFound\ -\ all\ provinces\ containing\ substring\ value\n
comment13.params=letter
comment13.target=java.lang.String[]\ getProvincesWhoseNameStartsWith(char)
comment13.text=\n\ [getProvincesWhoseNameStartsWith]\n\ @param\ \ char\ letter\ \ \ \ \ \ \ \ -\ char\ value\n\ @return\ \ provincesStart\ -\ all\ provinces\ starting\ with\ char\ provided\n
comment2.params=newPopulation
comment2.target=void\ setPopulation(int)
comment2.text=\n\ @param\ newPopulation\ -\ sets\ the\ population\ value\ unless\ negative\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\n\ @return\ getName\ -\ returns\ the\ province\ name\n
comment4.params=newName
comment4.target=void\ setName(java.lang.String)
comment4.text=\n\ @param\ newName\ -\ sets\ the\ name\ of\ the\ province\n
comment5.params=
comment5.target=void\ Canada()
comment5.text=\n\ Canada\ -\ establishes\ the\ province\ array\ containing\ all\ provinces\ \n
comment6.params=
comment6.target=int\ getTotalPopulation()
comment6.text=\n\ @return\ getTotalPopulation\ -\ returns\ the\ total\ population\ value\ of\ all\ provinces\n
comment7.params=
comment7.target=java.lang.String\ getLowestPopulation()
comment7.text=\n\ @return\ getLowestPopulation\ -\ returns\ the\ lowest\ population\ value\ between\ all\ provinces\n
comment8.params=province
comment8.target=int\ getPopulation(java.lang.String)
comment8.text=\n\ [getPopulation]\n\ @param\ \ String\ province\ \ \ \ \ \ -\ selected\ province\ to\ finc\ population\n\ @return\ populationValue\ -\ the\ population\ value\ of\ the\ province\ inputted\ \ \ \ \ \n
comment9.params=min\ max
comment9.target=java.lang.String[]\ getProvincesWithPopulationBetween(int,\ int)
comment9.text=\n\ @return\ getProvincesWithPopulationBetween\ -\ returns\ an\ array\ with\ every\ province\ between\ the\ suggested\ values\n\ @param\ min\ and\ max\ -\ the\ population\ values\ of\ the\ min\ and\ max\n
numComments=14
