#BlueJ class context
comment0.target=Book
comment0.text=\n\ A\ physical\ object\ containing\ the\ printed\ word,\ described\ in\ terms\ of\ the\ person\ who\ wrote\ it,\n\ the\ title\ it\ was\ given,\ and\ its\ date\ of\ publication.\n\ \n\ @author\ James\ Pede\n\ @version\ Jun1'14\n
comment1.params=
comment1.target=Book()
comment1.text=\n\ Default\ constructor\ for\ objects\ of\ class\ Book.\n
comment10.params=
comment10.target=java.lang.String\ getDayOfTheWeekBookWasPublished()
comment10.text=\n\ Pass-through\ function\ that\ asks\ the\ publication\ date\ to\ identify\n\ what\ week\ day\ it\ was\ when\ the\ book\ was\ released.\n\ @return\ one\ of\ "Monday",\ "Tuesday",\ etc..\n
comment11.params=
comment11.target=void\ printDetails()
comment11.text=\n\ Uses\ standard-out\ to\ display\ a\ little\ blurb\ about\ the\ Book\ details.\n\ No\ input\ or\ output\ to\ this\ method.\ \ It\ operates\ entirely\ on\ attributes.\n
comment2.params=author\ published\ title
comment2.target=Book(Author,\ Date,\ java.lang.String)
comment2.text=\n\ Non-default\ constructor\ for\ objects\ of\ class\ Book.\n\ Assumes\ the\ prior\ existence\ of\ all\ components,\ but\ each\ may\ optionally\ be\ null.\n\ @param\ author\ \ \ \ person\ who\ wrote\ the\ book;\ null\ defaults\ to\ "A.\ Non\ Ymous"\n\ @param\ published\ date\ of\ publication;\ null\ defaults\ to\ whatever\ the\ default\ Date\ is\n\ @param\ title\ \ \ \ \ primary\ identification\ of\ the\ book\ that\ appears\ on\ the\ cover;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ null\ is\ replaced\ with\ a\ default\n
comment3.params=
comment3.target=Author\ getAuthor()
comment3.text=\n\ Accessor.\n\ @return\ \ author\ attribute\n
comment4.params=
comment4.target=Date\ getDatePublished()
comment4.text=\n\ Accessor.\n\ @return\ \ published\ attribute\n
comment5.params=
comment5.target=java.lang.String\ getTitle()
comment5.text=\n\ Accessor.\n\ @return\ \ title\ attribute\n
comment6.params=author
comment6.target=void\ setAuthor(Author)
comment6.text=\n\ Mutator.\ \ Enforces\ a\ default\ if\ null.\n\ @param\ \ author\ attribute\n
comment7.params=published
comment7.target=void\ setDatePublished(Date)
comment7.text=\n\ Mutator.\ \ Enforces\ a\ default\ if\ null.\n\ @param\ \ published\ attribute\n
comment8.params=title
comment8.target=void\ setTitle(java.lang.String)
comment8.text=\n\ Mutator.\ \ Enforces\ a\ default\ if\ null.\n\ @param\ \ title\ attribute\n
comment9.params=
comment9.target=java.lang.String\ getAuthorName()
comment9.text=\n\ Pass-through\ function\ that\ obtains\ a\ full\ String\ interpretation\ of\ all\ the\ author's\ names.\n\ @return\ concatenated\ name-String\n
numComments=12
