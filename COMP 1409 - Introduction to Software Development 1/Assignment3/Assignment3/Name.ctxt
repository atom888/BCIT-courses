#BlueJ class context
comment0.target=Name
comment0.text=\n\ A\ given-name,\ optional\ middle\ name,\ and\ family-surname.\n\ \n\ @author\ James\ Pede\n\ @version\ Jun1'14\n
comment1.params=
comment1.target=Name()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Name\n
comment10.params=first\ middle\ last
comment10.target=void\ set(java.lang.String,\ java.lang.String,\ java.lang.String)
comment10.text=\n\ Similar\ to\ how\ it\ was\ done\ in\ Date,\ code\ that\ is\ common\ to\ re-naming\n\ was\ moved\ into\ this\ mutator\ of\ all\ the\ attributes.\n\ Specifically,\ if\ any\ one\ name\ of\ the\ three\ fails\ validation\ (length\ restrictions),\n\ all\ three\ will\ be\ devolved\ into\ a\ preset\ default.\n\ @param\ first\ \ \ \ \ a\ person's\ given\ name;\ if\ null,\ fails\ validation\n\ @param\ middle\ \ \ \ a\ person's\ middle\ name\ [optional\:\ use\ null\ to\ declare\ 'no\ middle\ name']\n\ @param\ last\ \ \ \ \ \ a\ person's\ surname;\ if\ null,\ fails\ validation\n
comment11.params=
comment11.target=void\ setDefaults()
comment11.text=\n\ Sets\ the\ three\ name\ attributes\ to\ 'fall-back'\ values.\n\ Used\ in\ the\ case\ of\ the\ default\ constructor\ OR\ any\ validation\ failure.\n
comment12.params=first
comment12.target=void\ setFirstName(java.lang.String)
comment12.text=\n\ Mutator.\n\ @param\ first\ given\ name\ of\ a\ person;\ null\ will\ fail\ validation\n
comment13.params=middle
comment13.target=void\ setMiddleName(java.lang.String)
comment13.text=\n\ Mutator.\n\ @param\ middle\ middle\ name\ of\ a\ person\ [optional\:\ use\ null\ to\ represent\ 'no\ middle\ name']\n
comment14.params=last
comment14.target=void\ setLastName(java.lang.String)
comment14.text=\n\ Mutator.\n\ @param\ last\ family\ name\ (a.k.a.\ the\ 'surname')\ of\ a\ person\n
comment2.params=first\ last\ middle
comment2.target=Name(java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Non-default\ constructor.\ \ Allows\ for\ initialization\ of\ all\ object\ attributes.\n\ @param\ first\ \ \ \ \ a\ person's\ given\ name;\ if\ null,\ fails\ validation\n\ @param\ middle\ \ \ \ a\ person's\ middle\ name\ [optional\:\ use\ null\ to\ declare\ 'no\ middle\ name']\n\ @param\ last\ \ \ \ \ \ a\ person's\ surname;\ if\ null,\ fails\ validation\n
comment3.params=
comment3.target=java.lang.String\ getFirstName()
comment3.text=\n\ Modified\ accessor.\n\ @return\ the\ Proper\ Noun\ version\ of\ the\ underlying\ first\ (name)\ attribute\n
comment4.params=
comment4.target=java.lang.String\ getMiddleName()
comment4.text=\n\ Modified\ accessor.\n\ @return\ the\ Proper\ Noun\ version\ of\ the\ underlying\ middle\ (name)\ attribute\n
comment5.params=
comment5.target=java.lang.String\ getLastName()
comment5.text=\n\ Modified\ accessor.\n\ @return\ the\ Proper\ Noun\ version\ of\ the\ underlying\ last\ (name)\ attribute\n
comment6.params=
comment6.target=java.lang.String\ getFullName()
comment6.text=\n\ Exposure\ pattern\:\ presents\ a\ public\ version\ of\ makePrettyName.\n\ @return\ "first\ middle\ last"\ OR\ "first\ last"\ if\ middle\ name\ is\ null\n
comment7.params=
comment7.target=java.lang.String\ getInitials()
comment7.text=\n\ Abbreviate\ makePrettyName\ down\ to\ the\ first\ letters\ of\ all\ the\ component\ names.\n\ @return\ "A.\ B.\ C."\ where\ A\ is\ the\ first\ letter\ of\ the\ first\ name,\ etc.\n
comment8.params=impromptuNoun
comment8.target=java.lang.String\ makeProper(java.lang.String)
comment8.text=\n\ This\ helper\ function\ was\ not\ explicitly\ demanded\ by\ the\ requirement\ specifications,\n\ but\ all\ attributes\ must\ be\ output\ in\ capital-first-letter-lowercase-all-else\ format,\n\ a.k.a.\ a\ Proper\ Noun.\ \ makeProper\ is\ called\ by\ all\ the\ attribute\ accessors.\n\ @param\ impromptuNoun\ a\ String\ literal,\ assumed\ to\ be\ non-null,\ non-empty;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Normally,\ this\ is\ a\ terrible\ assumption,\ but\ it\ is\ valid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ in\ this\ class\ due\ to\ how\ makeProper\ is\ used\ internally\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ AND\ the\ restrictions\ placed\ on\ the\ 'first'\ and\ 'last'\ attributes.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ String\ literal\ that\ is\ identical\ to\ impromptuNoun,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ except\ that\ its\ first\ letter\ is\ capitalized\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ all\ other\ letters\ lower-cased\n
comment9.params=
comment9.target=java.lang.String\ makePrettyName()
comment9.text=\n\ Concatenate\ all\ the\ component\ names,\ with\ spaces\ between\ them.\n\ @return\ "first\ middle\ last"\ OR\ "first\ last"\ if\ middle\ name\ is\ null\n
numComments=15
