#BlueJ class context
comment0.target=ProvinceTerritory
comment1.params=newName\ newPopulation
comment1.target=ProvinceTerritory(java.lang.String,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ ProvinceTerritory\ -\ not\ allowing\ null\ or\ negative\ values\n\ @param\ newName\ -\ sets\ the\ name\ of\ the\ province\ if\ not\ null\n\ @param\ newPopulation\ -\ sets\ the\ population\ if\ larger\ than\ zero\n
comment10.params=name
comment10.target=boolean\ isProvinceInCanada(java.lang.String)
comment10.text=\n\ @return\ isProvinceInCanada\ -\ returns\ true\ if\ the\ suggest\ province\ is\ in\ Canada,\ false\ otherwise\n\ @param\ name\ -\ the\ name\ of\ the\ suggested\ province\n
comment11.params=substring
comment11.target=java.lang.String[]\ getProvinceWhoseNameContains(java.lang.String)
comment11.text=\n\ @return\ getProvinceWhoseNameContains\ -\ returns\ an\ array\ with\ every\ province\ that\ contains\ the\ suggested\ substring\n\ @param\ substring\ -\ the\ substring\ that\ may\ be\ listed\ within\ provinces\ name\n
comment12.params=substring
comment12.target=ProvinceTerritory[]\ getMoreProvincesWhoseNameContains(java.lang.String)
comment12.text=\n\ @return\ getMoreProvincesWhoseNameContains\ -\ returns\ an\ array\ with\ every\ province\ that\ contains\ the\ suggested\ substring\n\ @param\ substring\ -\ the\ substring\ that\ may\ be\ listed\ within\ provinces\ name\n
comment13.params=letter
comment13.target=java.lang.String[]\ getProvincesWhoseNameStartsWith(char)
comment13.text=\n\ @return\ getProvincesWhoseNameStartsWith\ -\ returns\ an\ array\ with\ every\ province\ that\ contains\ the\ suggested\ substring\n\ @param\ letter\ -\ the\ letter\ that\ may\ start\ at\ the\ beginning\ of\ the\ listed\ provinces\ \n
comment14.params=min\ max
comment14.target=java.lang.String[]\ getProvincesWithPopulationBetween(int,\ int)
comment14.text=\n\ @return\ getProvincesWithPopulationBetween\ -\ returns\ an\ array\ with\ every\ province\ between\ the\ suggested\ values\n\ @param\ min\ and\ max\ -\ the\ population\ values\ of\ the\ min\ and\ max\n
comment2.params=province
comment2.target=int\ getPopulation(java.lang.String)
comment2.text=\n\ @return\ getPopulation\ -\ returns\ the\ population\ value\ of\ the\ province\ provided\n\ @param\ province\ -\ the\ suggested\ province\ for\ finding\ population\ value\n
comment3.params=newPopulation
comment3.target=void\ setPopulation(int)
comment3.text=\n\ @param\ newPopulation\ -\ sets\ the\ population\ value\ unless\ negative\n
comment4.params=
comment4.target=int\ getPopulation()
comment4.text=\n\ @return\ getPopulation\ -\ returns\ the\ population\ value\n
comment5.params=
comment5.target=java.lang.String\ getName()
comment5.text=\n\ @return\ getName\ -\ returns\ the\ province\ name\n
comment6.params=newName
comment6.target=void\ setName(java.lang.String)
comment6.text=\n\ @param\ newName\ -\ sets\ the\ name\ of\ the\ province\n
comment7.params=
comment7.target=void\ Canada()
comment7.text=\n\ Canada\ -\ establishes\ the\ province\ array\ containing\ all\ provinces\ \n
comment8.params=
comment8.target=int\ getTotalPopulation()
comment8.text=\n\ @return\ getTotalPopulation\ -\ returns\ the\ total\ population\ value\ of\ all\ provinces\n
comment9.params=
comment9.target=java.lang.String\ getLowestPopulation()
comment9.text=\n\ @return\ getLowestPopulation\ -\ returns\ the\ lowest\ population\ value\ between\ all\ provinces\n
numComments=15
