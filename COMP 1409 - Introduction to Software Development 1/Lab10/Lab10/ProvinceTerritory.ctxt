#BlueJ class context
comment0.target=ProvinceTerritory
comment1.params=newName\ newPopulation
comment1.target=ProvinceTerritory(java.lang.String,\ int)
comment1.text=\n\ [ProvinceTerritory]\n\ @param\ \ String\ newName\ \ \ \ \ \ \ -\ sets\ name\ if\ not\ null\n\ @param\ \ int\ \ \ \ newPopulation\ -\ sets\ population\ if\ greater\ than\ zero\n
comment10.params=letter
comment10.target=java.util.ArrayList\ getProvincesWhoseNameStartsWith(char)
comment10.text=\n\ [getProvincesWhoseNameStartsWith]\n\ @param\ \ char\ letter\ \ \ \ \ \ \ \ -\ char\ value\n\ @return\ \ provincesStart\ -\ all\ provinces\ starting\ with\ char\ provided\n
comment2.params=
comment2.target=void\ Canada()
comment2.text=\n\ [Canada]\ \n\ Generates\ the\ ProvinceTerritory\ ArrayList\ with\ all\ provinces\ and\ populations\n
comment3.params=
comment3.target=int\ getTotalPopulation()
comment3.text=\n\ [getTotalPopulation]\n\ @return\ total\ -\ total\ population\ of\ all\ provinces\n
comment4.params=
comment4.target=java.lang.String\ getLowestPopulation()
comment4.text=\n\ [getLowestPopulation]\n\ @return\ smallestProvince\ -\ province\ with\ the\ smallest\ population\n
comment5.params=
comment5.target=ProvinceTerritory\ getHighestPopulation()
comment5.text=\n\ [getHighestPopulation]\n\ @return\ largestPopulation\ -\ province\ with\ largest\ population\n
comment6.params=province
comment6.target=int\ getPopulation(java.lang.String)
comment6.text=\n\ [getPopulation]\n\ @param\ \ String\ province\ \ \ \ \ \ -\ selected\ province\ to\ finc\ population\n\ @return\ populationValue\ -\ the\ population\ value\ of\ the\ province\ inputted\ \ \ \ \ \n
comment7.params=name
comment7.target=boolean\ isProvinceInCanada(java.lang.String)
comment7.text=\n\ [isProvinceInCanada]\n\ @param\ \ String\ name\ \ \ \ \ \ \ \ \ \ -\ name\ of\ province\n\ @return\ \ result\ -\ returns\ true\ if\ province\ provide\ is\ within\ Canada\n
comment8.params=substring
comment8.target=ProvinceTerritory[]\ getProvincesWhoseNameContains(java.lang.String)
comment8.text=\n\ [getProvincesWhoseNameContains]\n\ @param\ \ String\ substring\ \ \ \ \ -\ substring\ value\n\ @return\ provincesFound\ -\ all\ provinces\ containing\ substring\ value\n
comment9.params=substring
comment9.target=java.util.ArrayList\ getMoreProvincesWhoseNameContains(java.lang.String)
comment9.text=\n\ [getMoreProvincesWhoseNameContains]\n\ @param\ \ String\ substring\ \ \ \ \ -\ substring\ value\n\ @return\ provincesContaining\ -\ all\ provinces\ containing\ substring\n
numComments=11
